-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from Parser.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_calc -> Exp                                 (0)
	Exp -> Exp '+' Exp                                 (1)
	Exp -> Exp '-' Exp                                 (2)
	Exp -> Exp '*' Exp                                 (3)
	Exp -> Exp '/' Exp                                 (4)
	Exp -> '{' CurlyExp '}'                            (5)
	Exp -> '[' BoxExp ']'                              (6)
	Exp -> '(' LiteralExp ')'                          (7)
	Exp -> num                                         (8)
	CurlyExp -> CurlyExp '+' CurlyExp                  (9)
	CurlyExp -> CurlyExp '-' CurlyExp                  (10)
	CurlyExp -> CurlyExp '*' CurlyExp                  (11)
	CurlyExp -> CurlyExp '/' CurlyExp                  (12)
	CurlyExp -> '[' BoxExp ']'                         (13)
	CurlyExp -> '(' LiteralExp ')'                     (14)
	CurlyExp -> num                                    (15)
	BoxExp -> BoxExp '+' BoxExp                        (16)
	BoxExp -> BoxExp '-' BoxExp                        (17)
	BoxExp -> BoxExp '*' BoxExp                        (18)
	BoxExp -> BoxExp '/' BoxExp                        (19)
	BoxExp -> '(' LiteralExp ')'                       (20)
	BoxExp -> num                                      (21)
	LiteralExp -> LiteralExp '+' LiteralExp            (22)
	LiteralExp -> LiteralExp '-' LiteralExp            (23)
	LiteralExp -> LiteralExp '*' LiteralExp            (24)
	LiteralExp -> LiteralExp '/' LiteralExp            (25)
	LiteralExp -> num                                  (26)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'+'            { TokenPlus }
	'-'            { TokenMinus }
	'*'            { TokenTimes }
	'/'            { TokenDiv }
	'('            { TokenOpenRound }
	')'            { TokenClosedRound }
	'['            { TokenOpenBox }
	']'            { TokenClosedBox }
	'{'            { TokenOpenCurly }
	'}'            { TokenClosedCurly }
	num            { TokenNum $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_calc     rule  0
	Exp             rules 1, 2, 3, 4, 5, 6, 7, 8
	CurlyExp        rules 9, 10, 11, 12, 13, 14, 15
	BoxExp          rules 16, 17, 18, 19, 20, 21
	LiteralExp      rules 22, 23, 24, 25, 26

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'('            shift, and enter state 3
	'['            shift, and enter state 4
	'{'            shift, and enter state 5
	num            shift, and enter state 6

	Exp            goto state 7

State 1


	'('            shift, and enter state 3
	'['            shift, and enter state 4
	'{'            shift, and enter state 5
	num            shift, and enter state 6

	Exp            goto state 2

State 2

	Exp -> Exp . '+' Exp                                (rule 1)
	Exp -> Exp . '-' Exp                                (rule 2)
	Exp -> Exp . '*' Exp                                (rule 3)
	Exp -> Exp . '/' Exp                                (rule 4)

	'+'            shift, and enter state 8
	'-'            shift, and enter state 9
	'*'            shift, and enter state 10
	'/'            shift, and enter state 11


State 3

	Exp -> '(' . LiteralExp ')'                         (rule 7)

	num            shift, and enter state 20

	LiteralExp     goto state 19

State 4

	Exp -> '[' . BoxExp ']'                             (rule 6)

	'('            shift, and enter state 17
	num            shift, and enter state 18

	BoxExp         goto state 16

State 5

	Exp -> '{' . CurlyExp '}'                           (rule 5)

	'('            shift, and enter state 13
	'['            shift, and enter state 14
	num            shift, and enter state 15

	CurlyExp       goto state 12

State 6

	Exp -> num .                                        (rule 8)

	'+'            reduce using rule 8
	'-'            reduce using rule 8
	'*'            reduce using rule 8
	'/'            reduce using rule 8
	%eof           reduce using rule 8


State 7

	%start_calc -> Exp .                                (rule 0)
	Exp -> Exp . '+' Exp                                (rule 1)
	Exp -> Exp . '-' Exp                                (rule 2)
	Exp -> Exp . '*' Exp                                (rule 3)
	Exp -> Exp . '/' Exp                                (rule 4)

	'+'            shift, and enter state 8
	'-'            shift, and enter state 9
	'*'            shift, and enter state 10
	'/'            shift, and enter state 11
	%eof           accept


State 8

	Exp -> Exp '+' . Exp                                (rule 1)

	'('            shift, and enter state 3
	'['            shift, and enter state 4
	'{'            shift, and enter state 5
	num            shift, and enter state 6

	Exp            goto state 42

State 9

	Exp -> Exp '-' . Exp                                (rule 2)

	'('            shift, and enter state 3
	'['            shift, and enter state 4
	'{'            shift, and enter state 5
	num            shift, and enter state 6

	Exp            goto state 41

State 10

	Exp -> Exp '*' . Exp                                (rule 3)

	'('            shift, and enter state 3
	'['            shift, and enter state 4
	'{'            shift, and enter state 5
	num            shift, and enter state 6

	Exp            goto state 40

State 11

	Exp -> Exp '/' . Exp                                (rule 4)

	'('            shift, and enter state 3
	'['            shift, and enter state 4
	'{'            shift, and enter state 5
	num            shift, and enter state 6

	Exp            goto state 39

State 12

	Exp -> '{' CurlyExp . '}'                           (rule 5)
	CurlyExp -> CurlyExp . '+' CurlyExp                 (rule 9)
	CurlyExp -> CurlyExp . '-' CurlyExp                 (rule 10)
	CurlyExp -> CurlyExp . '*' CurlyExp                 (rule 11)
	CurlyExp -> CurlyExp . '/' CurlyExp                 (rule 12)

	'+'            shift, and enter state 34
	'-'            shift, and enter state 35
	'*'            shift, and enter state 36
	'/'            shift, and enter state 37
	'}'            shift, and enter state 38


State 13

	CurlyExp -> '(' . LiteralExp ')'                    (rule 14)

	num            shift, and enter state 20

	LiteralExp     goto state 33

State 14

	CurlyExp -> '[' . BoxExp ']'                        (rule 13)

	'('            shift, and enter state 17
	num            shift, and enter state 18

	BoxExp         goto state 32

State 15

	CurlyExp -> num .                                   (rule 15)

	'+'            reduce using rule 15
	'-'            reduce using rule 15
	'*'            reduce using rule 15
	'/'            reduce using rule 15
	'}'            reduce using rule 15


State 16

	Exp -> '[' BoxExp . ']'                             (rule 6)
	BoxExp -> BoxExp . '+' BoxExp                       (rule 16)
	BoxExp -> BoxExp . '-' BoxExp                       (rule 17)
	BoxExp -> BoxExp . '*' BoxExp                       (rule 18)
	BoxExp -> BoxExp . '/' BoxExp                       (rule 19)

	'+'            shift, and enter state 27
	'-'            shift, and enter state 28
	'*'            shift, and enter state 29
	'/'            shift, and enter state 30
	']'            shift, and enter state 31


State 17

	BoxExp -> '(' . LiteralExp ')'                      (rule 20)

	num            shift, and enter state 20

	LiteralExp     goto state 26

State 18

	BoxExp -> num .                                     (rule 21)

	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'*'            reduce using rule 21
	'/'            reduce using rule 21
	']'            reduce using rule 21


State 19

	Exp -> '(' LiteralExp . ')'                         (rule 7)
	LiteralExp -> LiteralExp . '+' LiteralExp           (rule 22)
	LiteralExp -> LiteralExp . '-' LiteralExp           (rule 23)
	LiteralExp -> LiteralExp . '*' LiteralExp           (rule 24)
	LiteralExp -> LiteralExp . '/' LiteralExp           (rule 25)

	'+'            shift, and enter state 21
	'-'            shift, and enter state 22
	'*'            shift, and enter state 23
	'/'            shift, and enter state 24
	')'            shift, and enter state 25


State 20

	LiteralExp -> num .                                 (rule 26)

	'+'            reduce using rule 26
	'-'            reduce using rule 26
	'*'            reduce using rule 26
	'/'            reduce using rule 26
	')'            reduce using rule 26


State 21

	LiteralExp -> LiteralExp '+' . LiteralExp           (rule 22)

	num            shift, and enter state 20

	LiteralExp     goto state 57

State 22

	LiteralExp -> LiteralExp '-' . LiteralExp           (rule 23)

	num            shift, and enter state 20

	LiteralExp     goto state 56

State 23

	LiteralExp -> LiteralExp '*' . LiteralExp           (rule 24)

	num            shift, and enter state 20

	LiteralExp     goto state 55

State 24

	LiteralExp -> LiteralExp '/' . LiteralExp           (rule 25)

	num            shift, and enter state 20

	LiteralExp     goto state 54

State 25

	Exp -> '(' LiteralExp ')' .                         (rule 7)

	'+'            reduce using rule 7
	'-'            reduce using rule 7
	'*'            reduce using rule 7
	'/'            reduce using rule 7
	%eof           reduce using rule 7


State 26

	BoxExp -> '(' LiteralExp . ')'                      (rule 20)
	LiteralExp -> LiteralExp . '+' LiteralExp           (rule 22)
	LiteralExp -> LiteralExp . '-' LiteralExp           (rule 23)
	LiteralExp -> LiteralExp . '*' LiteralExp           (rule 24)
	LiteralExp -> LiteralExp . '/' LiteralExp           (rule 25)

	'+'            shift, and enter state 21
	'-'            shift, and enter state 22
	'*'            shift, and enter state 23
	'/'            shift, and enter state 24
	')'            shift, and enter state 53


State 27

	BoxExp -> BoxExp '+' . BoxExp                       (rule 16)

	'('            shift, and enter state 17
	num            shift, and enter state 18

	BoxExp         goto state 52

State 28

	BoxExp -> BoxExp '-' . BoxExp                       (rule 17)

	'('            shift, and enter state 17
	num            shift, and enter state 18

	BoxExp         goto state 51

State 29

	BoxExp -> BoxExp '*' . BoxExp                       (rule 18)

	'('            shift, and enter state 17
	num            shift, and enter state 18

	BoxExp         goto state 50

State 30

	BoxExp -> BoxExp '/' . BoxExp                       (rule 19)

	'('            shift, and enter state 17
	num            shift, and enter state 18

	BoxExp         goto state 49

State 31

	Exp -> '[' BoxExp ']' .                             (rule 6)

	'+'            reduce using rule 6
	'-'            reduce using rule 6
	'*'            reduce using rule 6
	'/'            reduce using rule 6
	%eof           reduce using rule 6


State 32

	CurlyExp -> '[' BoxExp . ']'                        (rule 13)
	BoxExp -> BoxExp . '+' BoxExp                       (rule 16)
	BoxExp -> BoxExp . '-' BoxExp                       (rule 17)
	BoxExp -> BoxExp . '*' BoxExp                       (rule 18)
	BoxExp -> BoxExp . '/' BoxExp                       (rule 19)

	'+'            shift, and enter state 27
	'-'            shift, and enter state 28
	'*'            shift, and enter state 29
	'/'            shift, and enter state 30
	']'            shift, and enter state 48


State 33

	CurlyExp -> '(' LiteralExp . ')'                    (rule 14)
	LiteralExp -> LiteralExp . '+' LiteralExp           (rule 22)
	LiteralExp -> LiteralExp . '-' LiteralExp           (rule 23)
	LiteralExp -> LiteralExp . '*' LiteralExp           (rule 24)
	LiteralExp -> LiteralExp . '/' LiteralExp           (rule 25)

	'+'            shift, and enter state 21
	'-'            shift, and enter state 22
	'*'            shift, and enter state 23
	'/'            shift, and enter state 24
	')'            shift, and enter state 47


State 34

	CurlyExp -> CurlyExp '+' . CurlyExp                 (rule 9)

	'('            shift, and enter state 13
	'['            shift, and enter state 14
	num            shift, and enter state 15

	CurlyExp       goto state 46

State 35

	CurlyExp -> CurlyExp '-' . CurlyExp                 (rule 10)

	'('            shift, and enter state 13
	'['            shift, and enter state 14
	num            shift, and enter state 15

	CurlyExp       goto state 45

State 36

	CurlyExp -> CurlyExp '*' . CurlyExp                 (rule 11)

	'('            shift, and enter state 13
	'['            shift, and enter state 14
	num            shift, and enter state 15

	CurlyExp       goto state 44

State 37

	CurlyExp -> CurlyExp '/' . CurlyExp                 (rule 12)

	'('            shift, and enter state 13
	'['            shift, and enter state 14
	num            shift, and enter state 15

	CurlyExp       goto state 43

State 38

	Exp -> '{' CurlyExp '}' .                           (rule 5)

	'+'            reduce using rule 5
	'-'            reduce using rule 5
	'*'            reduce using rule 5
	'/'            reduce using rule 5
	%eof           reduce using rule 5


State 39

	Exp -> Exp . '+' Exp                                (rule 1)
	Exp -> Exp . '-' Exp                                (rule 2)
	Exp -> Exp . '*' Exp                                (rule 3)
	Exp -> Exp . '/' Exp                                (rule 4)
	Exp -> Exp '/' Exp .                                (rule 4)

	'+'            reduce using rule 4
	'-'            reduce using rule 4
	'*'            reduce using rule 4
	'/'            reduce using rule 4
	%eof           reduce using rule 4


State 40

	Exp -> Exp . '+' Exp                                (rule 1)
	Exp -> Exp . '-' Exp                                (rule 2)
	Exp -> Exp . '*' Exp                                (rule 3)
	Exp -> Exp '*' Exp .                                (rule 3)
	Exp -> Exp . '/' Exp                                (rule 4)

	'+'            reduce using rule 3
	'-'            reduce using rule 3
	'*'            reduce using rule 3
	'/'            reduce using rule 3
	%eof           reduce using rule 3


State 41

	Exp -> Exp . '+' Exp                                (rule 1)
	Exp -> Exp . '-' Exp                                (rule 2)
	Exp -> Exp '-' Exp .                                (rule 2)
	Exp -> Exp . '*' Exp                                (rule 3)
	Exp -> Exp . '/' Exp                                (rule 4)

	'+'            reduce using rule 2
	'-'            reduce using rule 2
	'*'            shift, and enter state 10
	'/'            shift, and enter state 11
	%eof           reduce using rule 2


State 42

	Exp -> Exp . '+' Exp                                (rule 1)
	Exp -> Exp '+' Exp .                                (rule 1)
	Exp -> Exp . '-' Exp                                (rule 2)
	Exp -> Exp . '*' Exp                                (rule 3)
	Exp -> Exp . '/' Exp                                (rule 4)

	'+'            reduce using rule 1
	'-'            reduce using rule 1
	'*'            shift, and enter state 10
	'/'            shift, and enter state 11
	%eof           reduce using rule 1


State 43

	CurlyExp -> CurlyExp . '+' CurlyExp                 (rule 9)
	CurlyExp -> CurlyExp . '-' CurlyExp                 (rule 10)
	CurlyExp -> CurlyExp . '*' CurlyExp                 (rule 11)
	CurlyExp -> CurlyExp . '/' CurlyExp                 (rule 12)
	CurlyExp -> CurlyExp '/' CurlyExp .                 (rule 12)

	'+'            reduce using rule 12
	'-'            reduce using rule 12
	'*'            reduce using rule 12
	'/'            reduce using rule 12
	'}'            reduce using rule 12


State 44

	CurlyExp -> CurlyExp . '+' CurlyExp                 (rule 9)
	CurlyExp -> CurlyExp . '-' CurlyExp                 (rule 10)
	CurlyExp -> CurlyExp . '*' CurlyExp                 (rule 11)
	CurlyExp -> CurlyExp '*' CurlyExp .                 (rule 11)
	CurlyExp -> CurlyExp . '/' CurlyExp                 (rule 12)

	'+'            reduce using rule 11
	'-'            reduce using rule 11
	'*'            reduce using rule 11
	'/'            reduce using rule 11
	'}'            reduce using rule 11


State 45

	CurlyExp -> CurlyExp . '+' CurlyExp                 (rule 9)
	CurlyExp -> CurlyExp . '-' CurlyExp                 (rule 10)
	CurlyExp -> CurlyExp '-' CurlyExp .                 (rule 10)
	CurlyExp -> CurlyExp . '*' CurlyExp                 (rule 11)
	CurlyExp -> CurlyExp . '/' CurlyExp                 (rule 12)

	'+'            reduce using rule 10
	'-'            reduce using rule 10
	'*'            shift, and enter state 36
	'/'            shift, and enter state 37
	'}'            reduce using rule 10


State 46

	CurlyExp -> CurlyExp . '+' CurlyExp                 (rule 9)
	CurlyExp -> CurlyExp '+' CurlyExp .                 (rule 9)
	CurlyExp -> CurlyExp . '-' CurlyExp                 (rule 10)
	CurlyExp -> CurlyExp . '*' CurlyExp                 (rule 11)
	CurlyExp -> CurlyExp . '/' CurlyExp                 (rule 12)

	'+'            reduce using rule 9
	'-'            reduce using rule 9
	'*'            shift, and enter state 36
	'/'            shift, and enter state 37
	'}'            reduce using rule 9


State 47

	CurlyExp -> '(' LiteralExp ')' .                    (rule 14)

	'+'            reduce using rule 14
	'-'            reduce using rule 14
	'*'            reduce using rule 14
	'/'            reduce using rule 14
	'}'            reduce using rule 14


State 48

	CurlyExp -> '[' BoxExp ']' .                        (rule 13)

	'+'            reduce using rule 13
	'-'            reduce using rule 13
	'*'            reduce using rule 13
	'/'            reduce using rule 13
	'}'            reduce using rule 13


State 49

	BoxExp -> BoxExp . '+' BoxExp                       (rule 16)
	BoxExp -> BoxExp . '-' BoxExp                       (rule 17)
	BoxExp -> BoxExp . '*' BoxExp                       (rule 18)
	BoxExp -> BoxExp . '/' BoxExp                       (rule 19)
	BoxExp -> BoxExp '/' BoxExp .                       (rule 19)

	'+'            reduce using rule 19
	'-'            reduce using rule 19
	'*'            reduce using rule 19
	'/'            reduce using rule 19
	']'            reduce using rule 19


State 50

	BoxExp -> BoxExp . '+' BoxExp                       (rule 16)
	BoxExp -> BoxExp . '-' BoxExp                       (rule 17)
	BoxExp -> BoxExp . '*' BoxExp                       (rule 18)
	BoxExp -> BoxExp '*' BoxExp .                       (rule 18)
	BoxExp -> BoxExp . '/' BoxExp                       (rule 19)

	'+'            reduce using rule 18
	'-'            reduce using rule 18
	'*'            reduce using rule 18
	'/'            reduce using rule 18
	']'            reduce using rule 18


State 51

	BoxExp -> BoxExp . '+' BoxExp                       (rule 16)
	BoxExp -> BoxExp . '-' BoxExp                       (rule 17)
	BoxExp -> BoxExp '-' BoxExp .                       (rule 17)
	BoxExp -> BoxExp . '*' BoxExp                       (rule 18)
	BoxExp -> BoxExp . '/' BoxExp                       (rule 19)

	'+'            reduce using rule 17
	'-'            reduce using rule 17
	'*'            shift, and enter state 29
	'/'            shift, and enter state 30
	']'            reduce using rule 17


State 52

	BoxExp -> BoxExp . '+' BoxExp                       (rule 16)
	BoxExp -> BoxExp '+' BoxExp .                       (rule 16)
	BoxExp -> BoxExp . '-' BoxExp                       (rule 17)
	BoxExp -> BoxExp . '*' BoxExp                       (rule 18)
	BoxExp -> BoxExp . '/' BoxExp                       (rule 19)

	'+'            reduce using rule 16
	'-'            reduce using rule 16
	'*'            shift, and enter state 29
	'/'            shift, and enter state 30
	']'            reduce using rule 16


State 53

	BoxExp -> '(' LiteralExp ')' .                      (rule 20)

	'+'            reduce using rule 20
	'-'            reduce using rule 20
	'*'            reduce using rule 20
	'/'            reduce using rule 20
	']'            reduce using rule 20


State 54

	LiteralExp -> LiteralExp . '+' LiteralExp           (rule 22)
	LiteralExp -> LiteralExp . '-' LiteralExp           (rule 23)
	LiteralExp -> LiteralExp . '*' LiteralExp           (rule 24)
	LiteralExp -> LiteralExp . '/' LiteralExp           (rule 25)
	LiteralExp -> LiteralExp '/' LiteralExp .           (rule 25)

	'+'            reduce using rule 25
	'-'            reduce using rule 25
	'*'            reduce using rule 25
	'/'            reduce using rule 25
	')'            reduce using rule 25


State 55

	LiteralExp -> LiteralExp . '+' LiteralExp           (rule 22)
	LiteralExp -> LiteralExp . '-' LiteralExp           (rule 23)
	LiteralExp -> LiteralExp . '*' LiteralExp           (rule 24)
	LiteralExp -> LiteralExp '*' LiteralExp .           (rule 24)
	LiteralExp -> LiteralExp . '/' LiteralExp           (rule 25)

	'+'            reduce using rule 24
	'-'            reduce using rule 24
	'*'            reduce using rule 24
	'/'            reduce using rule 24
	')'            reduce using rule 24


State 56

	LiteralExp -> LiteralExp . '+' LiteralExp           (rule 22)
	LiteralExp -> LiteralExp . '-' LiteralExp           (rule 23)
	LiteralExp -> LiteralExp '-' LiteralExp .           (rule 23)
	LiteralExp -> LiteralExp . '*' LiteralExp           (rule 24)
	LiteralExp -> LiteralExp . '/' LiteralExp           (rule 25)

	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'*'            shift, and enter state 23
	'/'            shift, and enter state 24
	')'            reduce using rule 23


State 57

	LiteralExp -> LiteralExp . '+' LiteralExp           (rule 22)
	LiteralExp -> LiteralExp '+' LiteralExp .           (rule 22)
	LiteralExp -> LiteralExp . '-' LiteralExp           (rule 23)
	LiteralExp -> LiteralExp . '*' LiteralExp           (rule 24)
	LiteralExp -> LiteralExp . '/' LiteralExp           (rule 25)

	'+'            reduce using rule 22
	'-'            reduce using rule 22
	'*'            shift, and enter state 23
	'/'            shift, and enter state 24
	')'            reduce using rule 22


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 27
Number of terminals: 11
Number of non-terminals: 5
Number of states: 58
